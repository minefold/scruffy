#!/usr/bin/env ruby
# encoding: UTF-8
require 'bundler/setup'
Bundler.require :default

require 'benchmark'

$:.unshift File.join File.dirname(__FILE__), '../lib'
require 'scruffy'

STDOUT.sync = true

Bugsnag.configure do |config|
  config.api_key = ENV['BUGSNAG']
  config.release_stage = Scruffy.env
  config.project_root = Scruffy.root
  config.notify_release_stages = ['production', 'staging']
  config.use_ssl = true
end

$metrics = nil
if ENV['LIBRATO_EMAIL'] and ENV['LIBRATO_API_TOKEN']
  Librato::Metrics.authenticate ENV['LIBRATO_EMAIL'], ENV['LIBRATO_API_TOKEN']
  $metrics = Librato::Metrics::Queue.new
end

running = true
Signal.trap('TERM') do
  running = false
end

while running
  begin
    log = Mutli::Logger.new
    bm = Benchmark.measure do
      cluster = if Scruffy.env == 'development'
        LocalCluster.new
      else
        FogCluster.new
      end

      bus = RedisBus.new
      boxes = Boxes.new(cluster)
      pinkies = Pinkies.new(bus)
      servers = Servers.new(bus)
      scruffy = Scruffy.new(bus, boxes, pinkies, servers)

      scruffy.sweep!
      scruffy.report
      scruffy.record_metrics
    end

    log.info event: 'sweep', duration: bm.real
  rescue => e
    log.error e, event: 'sweep'

    Bugsnag.notify(e)
  end

  sleep 5
end
